#!/bin/sh

PROG="clcam"
VERSION="0.7.0"
CONF_DATE=`date`

SRCS="video.c save.c filters.c clcam.c stamp.c"
INCLUDES="video.h save.h filters.h clcam.h stamp.h"
OBJS="video.o save.o filters.o clcam.o stamp.o"

#
trap "" 13 14 15

ENABLE_JPEG=""
ENABLE_PNG=""
ENABLE_FILTERS=""
VIDEO_DEVICE="/dev/video0"
n="-n"

#
# Some reasonable defaults
#
CFLAGS="-O3 -DVERSION=\\\"\$(VERSION)\\\""
DEFLIBS="-lm"

cat << __EOF__
Welcome to autoconfigure for clcam.


__EOF__

echo $n "...Looking for /usr/include/png.h...$c"

sleep 1

if [ -r /usr/include/png.h ] ; then
	ENABLE_PNG="1"
	echo  'found!'
else
	echo 'not found :('
fi

echo $n "...Looking for /usr/include/jpeglib.h...$c"

sleep 1

if [ -r /usr/include/jpeglib.h ] ; then
	ENABLE_JPEG="1"
	echo  'found!'
else
	echo 'not found :('
fi

FOO=""
runonce=""
while [ -z "$FOO" ] ; do
    if [ -n "$ENABLE_JPEG" ] ; then
	FOO="Yes"
    else
	FOO="No"
    fi
    echo ""
    echo "Enable JPEG support?."
    echo $n "[$FOO] -> $c"

    read cc
    if [ -z "$cc" ] ; then
	cc=$FOO
    fi
    case "$cc" in
	[Yy]*)
	    CFLAGS="$CFLAGS -DENABLE_JPEG"
            DEFLIBS="$DEFLIBS -ljpeg"
	    ;;
	[Nn]*)
	    ;;
	*)
	    echo ""
	    echo "You need to enter either Yes or No here..."
	    echo ""
	    FOO=""
	    ;;
    esac
done

FOO=""
runonce=""
while [ -z "$FOO" ] ; do
    if [ -n "$ENABLE_PNG" ] ; then
	FOO="Yes"
    else
	FOO="No"
    fi
    echo ""
    echo "Enable PNG support?"
    echo $n "[$FOO] -> $c"
    read cc
    if [ -z "$cc" ] ; then
	cc=$FOO
    fi
    case "$cc" in
	[Yy]*)
	    CFLAGS="$CFLAGS -DENABLE_PNG"
            DEFLIBS="$DEFLIBS -lpng"
	    ;;
	[Nn]*)
	    ;;
	*)
	    echo ""
	    echo "You need to enter either Yes or No here..."
	    echo ""
	    FOO=""
	    ;;
    esac
done

FOO=""
runonce=""
while [ -z "$FOO" ] ; do
    if [ -n "$ENABLE_FILTERS" ] ; then
	FOO="Yes"
    else
	FOO="No"
    fi
    echo ""
    echo "Enable built-in filters?"
    echo $n "[$FOO] -> $c"
    read cc
    if [ -z "$cc" ] ; then
	cc=$FOO
    fi
    case "$cc" in
	[Yy]*)
	    CFLAGS="$CFLAGS -DENABLE_FILTERS"
	    ;;
	[Nn]*)
	    ;;
	*)
	    echo ""
	    echo "You need to enter either Yes or No here..."
	    echo ""
	    FOO=""
	    ;;
    esac
done

FOO=""
while [ -z "$FOO" ] ; do
    if [ -n "$VIDEO_DEVICE" ] ; then
        FOO=$VIDEO_DEVICE
    else
        FOO="/dev/video0"
    fi

    echo ""
    echo "Please choose the video device your camera is located on"
    echo "(This more than likely is /dev/video0 ..)"
    echo $n "[$FOO] -> $c"
    read cc
    if [ -z "$cc" ] ; then
        cc=$FOO
    fi
    case "$cc" in
        *)
            VIDEO_DEVICE="$cc"
            CFLAGS="$CFLAGS -DVIDEO_DEVICE=\\\"$VIDEO_DEVICE\\\""
            ;;
    esac
done

#
# create the persistant file
#
rm -f Makefile
cat > Makefile << __EOF__
#
# VERSION: $VERSION
# DATE:    $CONF_DATE
#
# This file is automatically generated and will be updated each time you
# run configure. Changes you make here will be erased if you run configure
# again!

CC=gcc
LD=\$(CC)

VERSION=$VERSION
PROG=$PROG

CFLAGS=$CFLAGS
LDFLAGS=$DEFLIBS
SRCS=$SRCS
INCLUDES=$INCLUDES
OBJS=$OBJS

all: \$(PROG)

distclean:
	rm -f \$(PROG) \$(OBJS) Makefile *.jpg *.png *.ppm *.core core *.bak *~
clean:
	rm -f \$(PROG) \$(OBJS) *.jpg *.png *.ppm *.core core *.bak *~
dist: \$(SRCS) \$(INCLUDES) configure CHANGES COPYING INSTALL README TODO
	mkdir ../\$(PROG)-\$(VERSION)
	cp video.c ../\$(PROG)-\$(VERSION)/
	cp video.h ../\$(PROG)-\$(VERSION)/
	cp clcam.c ../\$(PROG)-\$(VERSION)/
	cp clcam.h ../\$(PROG)-\$(VERSION)/
	cp save.c ../\$(PROG)-\$(VERSION)/
	cp save.h ../\$(PROG)-\$(VERSION)/
	cp filters.c ../\$(PROG)-\$(VERSION)/
	cp filters.h ../\$(PROG)-\$(VERSION)/
	cp stamp.c ../\$(PROG)-\$(VERSION)/
	cp stamp.h ../\$(PROG)-\$(VERSION)/
	cp configure ../\$(PROG)-\$(VERSION)/
	cp CHANGES ../\$(PROG)-\$(VERSION)/
	cp COPYING ../\$(PROG)-\$(VERSION)/
	cp INSTALL ../\$(PROG)-\$(VERSION)/
	cp README ../\$(PROG)-\$(VERSION)/
	cp TODO ../\$(PROG)-\$(VERSION)/
	cp STAMP ../\$(PROG)-\$(VERSION)/
	cp SWITCHES ../\$(PROG)-\$(VERSION)/
clcam: \$(OBJS)
	\$(LD) \$(OBJS) -o \$(PROG) \$(LDFLAGS)
video.o: video.c \$(INCLUDES)
	\$(CC) \$(CFLAGS) -c video.c
filters.o: filters.c \$(INCLUDES)
	\$(CC) \$(CFLAGS) -c filters.c
save.o: save.c \$(INCLUDES)
	\$(CC) \$(CFLAGS) -c save.c
clcam.o: clcam.c \$(INCLUDES)
	\$(CC) \$(CFLAGS) -c clcam.c
stamp.o: stamp.c \$(INCLUDES)
	\$(CC) \$(CFLAGS) -c stamp.c
__EOF__

cat <<__EOF__

##########################################
#                                        #
#  configure is complete.                #
#                                        #
#  type 'make' and let the magic begin.  #
#                                        #
##########################################

__EOF__
